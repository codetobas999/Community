##Update file /etc/sysconfig/network-scripts/ifcfg-enp0s3
TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=static
DEFROUTE=yes
IPV4_FAILURE_FATAL=noroot
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
NAME=enp0s3
UUID=32d79c08-d122-4dae-84ab-5539a637dbf1
DEVICE=enp0s3
ONBOOT=yes
IPADDR=192.168.1.101
NETMASK=255.255.255.0
GATEWAY=192.168.1.1
DNS1=8.8.8.8
DNS2=8.8.4.4

=======================
## Install Docker
## Switch to root user
su â€“ root 

## Install net-tools , ntpd
yum update -y
yum -y install net-tools
yum install -y ntp
systemctl enable ntpd 
systemctl start ntpd
systemctl status ntpd

# Disable firewalld service
systemctl status firewalld
## type yourself don't copy & paste
systemctl stop firewalld
## type yourself don't copy & paste
systemctl disable firewalld

## Install Device mapper & logical volume manager 
yum install -y yum-utils device-mapper-persistent-data lvm2

## Add docker repo
yum-config-manager --add-repo \
  https://download.docker.com/linux/centos/docker-ce.repo

## Install Docker CE.
yum update -y && yum install -y \
  containerd.io-1.2.13 \
  docker-ce-19.03.8 \
  docker-ce-cli-19.03.8

## Create /etc/docker directory.
mkdir /etc/docker

# Setup daemon.
cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2",
  "storage-opts": [
    "overlay2.override_kernel_check=true"
  ]
}
EOF

## Create docker.service.d
mkdir -p /etc/systemd/system/docker.service.d

## Start Docker service
systemctl daemon-reload
## type yourself don't copy & paste
systemctl restart docker
## type yourself don't copy & paste
systemctl enable docker.service

## docker list process
docker ps


## Letting iptables see bridged traffic
cat <<EOF > /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF


## Refresh config
sysctl --system

## turnoff swap
swapoff -a

## Update file /etc/fstab (comment this line) [for Virutalbox]
#/dev/mapper/centos-swap swap                    swap    defaults        0 0

## Add Kubernetes repo
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

# Set SELinux in permissive mode (effectively disabling it)
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

## install kubelet kubeadmin kubectl
yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
## type yourself don't copy & paste
systemctl enable kubelet
## type yourself don't copy & paste
systemctl start kubelet

## Clond Image for another node (for Virtual box)

## Change hostname to master1
hostnamectl set-hostname node01
## or
hostnamectl set-hostname node02

## install telnet & test connection
yum install -y telnet
telnet <master-id> 6443

## Enable firewall 
sudo iptables -A INPUT -p tcp --dport 6443 -j ACCEPT

## If find error "No route to host", run command below
iptables --flush
iptables -tnat --flush
   

## Join Kubernetes cluster

kubeadm join 192.168.1.100:6443 --token nraqf2.myj12wgp2qkm2yvs \
    --discovery-token-ca-cert-hash sha256:33581a7fdc47da4d549788e62349067c6e0ba66eec8bc35eb28b9ab421d8a77c --ignore-preflight-errors=all 

